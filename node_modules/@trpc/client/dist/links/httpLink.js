'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var observable = require('@trpc/server/observable');
var transformResult = require('../transformResult-e15ccdf6.js');
var httpUtils = require('../httpUtils-5f1164a9.js');

function httpLink(opts) {
    const resolvedOpts = httpUtils.resolveHTTPLinkOptions(opts);
    return (runtime)=>({ op  })=>observable.observable((observer)=>{
                const { path , input , type  } = op;
                const { promise , cancel  } = httpUtils.httpRequest({
                    ...resolvedOpts,
                    runtime,
                    type,
                    path,
                    input
                });
                promise.then((res)=>{
                    const transformed = transformResult.transformResult(res.json, runtime);
                    if (!transformed.ok) {
                        observer.error(transformResult.TRPCClientError.from(transformed.error, {
                            meta: res.meta
                        }));
                        return;
                    }
                    observer.next({
                        context: res.meta,
                        result: transformed.result
                    });
                    observer.complete();
                }).catch((cause)=>observer.error(transformResult.TRPCClientError.from(cause)));
                return ()=>{
                    cancel();
                };
            });
}

exports.httpLink = httpLink;
